{
  "quotes": [
    {
      "russian": "Когда программа изменяется, её сложность будет возрастать, при условии, что никто активно не работает против этого.",
      "english": "When the program is modified, its complexity will increase, provided that one does not actively work against this."
    },
    {
      "russian": "Я люблю находить наиболее простые и эффективные решения для сложных и манящих проблем. Это то, что я делаю в EPAM каждый день. Это помогает мне расширять лимиты моих возможностей и изучать новые вещи. Это улучшает мое творчество и заставляет меня пробовать новые вещи, чтобы решить проблемы.",
      "english": "I love finding the simplest and most effective solutions for complex and challenging problems. That's what I do at EPAM every single day. It helps me to push my limits and learn new things. It improves my creativity and drives me to try new things to solve problems."
    }
  ],
  "self": [
    {
      "russian": "My name is",
      "english": "My name is Pavel Korshunov as already mentioned and I'm a senior software developer in Digital Engagement Practice unit."
    },
    {
      "russian": "I have over",
      "english": "I have over 15 years full-lifecycle software architecture, development and design experience, specifically focused on Java as well as HTML, JavaScript, and including solid experience with databases."
    },
    {
      "russian": "Prior to EPAM",
      "english": "Prior to EPAM I worked at Veeam as SFDC developer. I started with implementing typical SFDC-developer tasks such as building custom pages, implementing business-logic with flexible integration into existing workflow, provide test-data, QA and development. Honestly, I came to salesforce-world from Oracle and I had quickly learn this new platform."
    },
    {
      "russian": "In addition to that",
      "english": "In addition to that during my probation period my task was to propose way to implement establishing and actualization environment for QA on the base of free developers sfdc accounts. This task required deep knowledge of sfdc architecture, so after it was successfully fulfilled, I was ready to perform any other manipulations with salesforce data or metadata."
    },
    {
      "russian": "After that my major focus",
      "english": "After that my major focus was on Building custom EDI solution (Open AS2, Spring, MQ, Java) and introducing microservices approach for integration layer. I had proposed to Architect position and successfully passed all requirements but then I got offer from EPAM."
    },
    {
      "russian": "I've been at EPAM",
      "english": "I've been at EPAM for about 9 month. Before I joined billable project I had had to learn new platform Adobe AEM to be ready to design and implement a real application based on this technology. During this time, I managed 3 developers and played architect role on internal EPAM Forms project, also based on AEM."
    },
    {
      "russian": "After that",
      "english": "After that, I had played lead developer role in Canadian Tire Redesign project. I started with front-end development with leading JS frameworks and libraries, than I continued with back-end (OSGI bundles and AEM/CQ components) and finally I performed team-leader duties and responsibilities."
    },
    {
      "russian": "Since I joined EPAM",
      "english": "Since I joined EPAM I continuous work on improving not only technical but soft skills. I attended different tech events as moderator or facilitator and was presenter on the ITSubbotnik on May. For my speech, I chosen Apache Sling framework as foundation for Adobe AEM. Due we need specialists who can rapidly join existing projects, but information about these technologies does not presented on RUnet at all."
    },
    {
      "russian": "Furthermore I've started participate",
      "english": "Furthermore I've started participate in EPAM Talent acquisition as technical interviewer. It's give me opportunity to refresh some technical knowledge that currently not used on projects, for example relation DB or Spring."
    },
    {
      "russian": "In addition, I'm involved",
      "english": "In addition, I'm involved in Java mentoring program, where I'm presenting Java API design module. And, of course I perform committee expert role during current assessment round."
    },
    {
      "russian": "As aims for this assessment session",
      "english": "As aims for this assessment session, I see receiving objective feedback and some recommendations for my future steps. Lead-developer position could give me opportunity to work more closely with customers, because today is it only obstacle between me and architect’ role on one of our top project in our unit. Yeah, in future I see myself as solution architect."
    },
    {
      "russian": "When I started prepare",
      "english": "When I started prepare my self-presentation I thought, that's it would be a good idea to add that I'm also interesting in security, but it would be only words, without any evidence. Fortunately, EPAM got many internal resources and one hour later, I have got all my colleagues session information. Simple cross-site scripting on INFO portal with a little help from our URL-shortener."
    },
    {
      "russian": "I think that it is regarding to my work",
      "english": "I think that it is regarding to my work. When I have free time at home, I work on different own projects. Because I'm interested in music making, I develop various MIDI controllers and wireless controllers for music show performance, my own realization of Apache Sling JCR concept written on Node JS now passing performance testing, and Light at my kitchen switching on and off by voice command to Siri (thanks for mqtt, arduino and raspberry Pi). So, I’m engineer in heart. That’s all"
    }
  ],
  "bloat": [
    {
      "russian": "Bloat",
      "english": "We’ve all heard the advice to simplify, simplify, simplify. Yet, many products are bloated and confused. Why does this happen? What’s the disconnect between the stated goal of a streamlined product and the reality of overstuffing it?"
    },
    {
      "russian": "Bloat",
      "english": "In a word, fear. The team is afraid of what might happen if they don’t offer X or Y. This leads to rationalizing the bloat."
    },
    {
      "russian": "Bloat",
      "english": "Teams that don’t understand who they’re building for, and why, are prone to make bloated products. They can always imagine situations where someone might need a given option. Each possible product choice becomes a lengthy debate, and inevitably they cave to adding more. They can’t make the trade-offs."
    },
    {
      "russian": "Bloat",
      "english": "It feels safer to keep as many options as possible; more options, they reason, equal more chances to be happy. Unfortunately this dilutes an otherwise good product. It foists all those additional options onto the customer, who ends up doing the hard work of editing the product for themselves."
    },
    {
      "russian": "Bloat",
      "english": "It’s one thing to say you want a simple, uncluttered product and something entirely different to actually make one. When a team understands who they’re building for, they have a much better chance of delivering on that goal."
    },
    {
      "russian": "Bloat",
      "english": "The choice to leave out an option is never an easy one to make, but it’s easier if your team shares common values. And what’s more, it’s your job. You need to make the hard choices for your customers. They’ll thank you for it."
    }
  ]
}